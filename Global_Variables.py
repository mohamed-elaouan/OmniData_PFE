import pandas as pd
import numpy as np

#
start_date=int(2008)
end_date=int(2025)
#Static Infos

np.random.seed(42) # Set random seed for reproducibility

# Define the number of samples
n_samples = 100000
# intialize of interval amount Account by the Account Cat√©gories 
intervall_etudiant_Amount=[500,10000]
intervall_salaire_Amount=[3000,30000]
intervall_professionnel_Amount=[15000,150000]
intervall_joint_Amount=[5000,100000]
intervall_epargne_Amount=[5000,50000]

# for bank transaction cat√©gorie
comptes_bancaires_marocains_generaux = [
    # Pour les Particuliers (les plus courants)
    "compte courant",
    "compte d‚Äô√©pargne",# √ßa ce que n'appel le compt dormant

    # Pour les Professionnels (les plus fondamentaux)
    "compte professionnel",

    # Une cat√©gorie de plus en plus r√©pandue
    "compte de shopping" # pour es paiement en-ligne
]

# Affichage de la liste
print(comptes_bancaires_marocains_generaux)

morocco_cities = [
    "Casablanca",
    "Fes",
    "Sal√©",
    "Marrakech",
    "Tangier",
    "Rabat",
    "Meknes",
    "Oujda",
    "Kenitra",
    "Agadir",
    "Tetouan",
    "Safi",
    "Temara",
    "Inezgane",
    "Mohammedia",
    "Laayoune",
    "Khouribga",
    "Beni Mellal",
    "El Jadida",
    "Taza",
    "Ait Melloul",
    "Nador",
    "Settat",
    "Ksar El Kbir",
    "Larache",
    "Khemisset",
    "Guelmim",
    "Berrechid",
    "Oued Zem",
    "Fkih Ben Salah",
    "Taourirt",
    "Berkane",
    "Sidi Slimane",
    "Errachidia",
    "Sidi Kacem",
    "Khenifra",
    "Tifelt",
    "Essaouira",
    "Taroudant",
    "El Kelaa des Sraghna",
    "Oulad Teima",
    "Youssoufia",
    "Sefrou",
    "Ben Guerir",
    "Tan-Tan",
    "Ouazzane",
    "Guercif",
    "Dakhla",
    "Al Hoceima",
    "Fnideq",
    "Ouarzazate",
    "Tiznit",
    "Suq Sebt Oulad Nemma",
    "Azrou",
    "Lahraouyine",
    "Benslimane",
    "Midelt",
    "Jerada",
    "Skhirat",
    "Souk Larbaa",
    "Ain Harrouda",
    "Bejaad",
    "Kasbat Tadla",
    "Sidi Bennour",
    "Martil",
    "Lqliaa",
    "Boujdour",
    "Azemour",
    "M'diq",
    "Tinghir",
    "El Arwi",
    "Chefchaouen",
    "M'Rirt",
    "Zagora",
    "El Aioun Sidi Mellouk",
    "Lamkansa",
    "Smara",
    "Taounate",
    "Bin An≈üƒÅr",
    "Sidi Yahya El Gharb",
    "Zaio",
    "Amalou Ighriben",
    "Asilah",
    "Azilal",
    "Mechra Bel Ksiri",
    "El Hajeb",
    "Bouznika",
    "Imzouren",
    "Tahla",
    "BouiZazarene Ihaddadene",
    "Ain El Aouda",
    "Bouarfa",
    "Arfoud",
    "Figuig",
    "Sidi Ifni",
    "Demnate",
    "Sidi Yahya des Za√´r",
    "Oujda-Angad",
    "Fes al Bali",
    "Tinejdad",
    "Ksar es-Seghir",
    "Moulay Abdallah",
    "Bni Hadifa",
    "Imilchil",
    "Zeghanghane",
    "Midar",
    "Sidi Bou Othmane",
    "Kalaat M'Gouna",
    "Tafraout",
    "Aklim",
    "Bhalil",
    "Ifrane",
    "Immouzer Kandar",
    "Sejnane",
    "Mechraa Hammadi",
    "Kattara",
    "Ait Daoud",
    "Targuist",
    "Missour",
    "Outat El Haj",
    "Aknoul",
    "Tichka",
    "Boumalne Dades",
    "El Ksiba",
    "Kerrouchen",
    "Afourar",
    "Bzou",
    "Oued Laou",
    "Sidi Allal El Bahraoui",
    "Ain Cheggag",
    "Ribate El Kheir",
    "Sidi Jaber",
    "Skoura",
    "Tameslouht",
    "Ait Boubidmane",
    "Guisser",
    "Lakhsas",
    "Mrassine",
    "Sidi Tayi",
    "Tnine Ourika",
    "Ait Faska",
    "Assa",
    "Tata",
    "Tantan",
    "Akhfenir",
    "Bou Craa",
    "El Marsa",
    "Foum El Oued",
    "Guerguerat",
    "Haouza",
    "Jorf Lasfar",
    "Lemsid",
    "Mhamid El Ghizlane",
    "Oum Drou",
    "Smara",
    "Tichla",
    "Bir Gandouz",
    "Imlil",
    "Imi N'Tanout",
    "Tizi Ousli",
    "Zawyat Cheikh",
    "Ait Ishaq",
    "Boulanouar",
    "Had Kourt",
    "Khemis Zemamra",
    "Sidi Smail",
    "Youssoufia Ca√Ødat",
    "Adrar",
    "Alnif",
    "Erfoud",
    "Merzouga",
    "Rissani",
    "Tineghir",
    "Tinghir",
    "Zagora"
]

famous_countries = [
    "India",
    "China",
    "United States",
    "Indonesia",
    "Pakistan",
    "Nigeria",
    "Brazil",
    "Bangladesh",
    "Russia",
    "Mexico",
    "Japan",
    "Philippines",
    "Ethiopia",
    "Democratic Republic of the Congo",
    "Egypt",
    "Vietnam",
    "Iran",
    "Turkey",
    "Germany",
    "France",
    "United Kingdom",
    "Thailand",
    "South Africa",
    "Tanzania",
    "Italy",
    "Colombia",
    "Kenya",
    "Myanmar",
    "South Korea",
    "Sudan",
    "Spain",
    "Algeria",
    "Argentina",
    "Uganda",
    "Iraq",
    "Afghanistan",
    "Canada",
    "Uzbekistan",
    "Poland",
    "Morocco",
    "Angola",
    "Malaysia",
    "Peru",
    "Mozambique",
    "Ghana",
    "Ukraine",
    "Yemen",
    "Saudi Arabia",
    "Madagascar",
    "Ivory Coast",
    "Nepal",
    "Cameroon",
    "Venezuela",
    "Australia",
    "Niger",
    "North Korea",
    "Syria",
    "Burkina Faso",
    "Taiwan",
    "Mali",
    "Sri Lanka",
    "Kazakhstan",
    "Malawi",
    "Chile",
    "Zambia",
    "Romania",
    "Somalia",
    "Chad",
    "Senegal",
    "Netherlands",
    "Guatemala",
    "Cambodia",
    "Ecuador",
    "Zimbabwe",
    "Guinea",
    "Benin",
    "Rwanda",
    "Burundi",
    "Bolivia",
    "Tunisia",
    "South Sudan",
    "Haiti",
    "Belgium",
    "Jordan",
    "Dominican Republic",
    "United Arab Emirates",
    "Honduras",
    "Cuba",
    "Tajikistan",
    "Papua New Guinea",
    "Sweden",
    "Czech Republic",
    "Portugal",
    "Azerbaijan",
    "Greece",
    "Hungary",
    "Belarus",
    "Israel",
    "Austria",
    "Switzerland",
    "Serbia",
    "Bulgaria",
    "Denmark",
    "Finland",
    "Singapore",
    "Norway",
    "Ireland",
    "New Zealand",
    "Costa Rica",
    "Slovakia",
    "Liberia",
    "Central African Republic",
    "Lebanon",
    "Libya",
    "Palestine",
    "Kuwait",
    "Oman",
    "Panama",
    "Mauritania",
    "Uruguay",
    "Bosnia and Herzegovina",
    "Albania",
    "Lithuania",
    "Armenia",
    "Latvia",
    "North Macedonia",
    "Slovenia",
    "Botswana",
    "Equatorial Guinea",
    "Estonia",
    "Lesotho",
    "Luxembourg",
    "Montenegro",
    "Moldova",
    "Jamaica",
    "Namibia",
    "Gambia",
    "Qatar",
    "Bahrain",
    "Timor-Leste",
    "Eswatini",
    "Djibouti",
    "Comoros",
    "Cyprus",
    "Fiji",
    "Guyana",
    "Bhutan",
    "Solomon Islands",
    "Mauritius",
    "Brunei",
    "Cabo Verde",
    "Vanuatu",
    "Samoa",
    "Sao Tome and Principe",
    "Seychelles",
    "Kiribati",
    "Tonga",
    "Micronesia",
    "Dominica",
    "Saint Lucia",
    "Andorra",
    "Palau",
    "Grenada",
    "Saint Vincent and the Grenadines",
    "Malta",
    "Maldives",
    "Barbados",
    "Antigua and Barbuda",
    "Liechtenstein",
    "San Marino",
    "Tuvalu",
    "Nauru",
    "Monaco",
    "Vatican City"
]
# Dict who combine the Cities of Morocco and the others contrais
cities_contry_of_world = {
    "morocco_cities": morocco_cities,
    "famous_countries": famous_countries
}

# Account Bank Cat√©gories 

comptes_bancaires = [
    "d‚Äô√©pargne",
    "professionnel",
    "joint",
    "salaire",
    "√©tudiant"
]

transfer_type=['TPE', 'Desktop', 'Phone', 'DAB'] #DAB is ATM ( mean transation from GAP-Bank Agent) 

merchant_category_codes = {
    # Alimentation & Restaurants üçî
    "5411": "√âpiceries et supermarch√©s",
    "5812": "Restaurants",
    "5813": "Bars et discoth√®ques",
    "5814": "Fast-food",

    # Transport & Voyages ‚úàÔ∏è
    "4111": "Services de transport en commun",
    "4511": "Compagnies a√©riennes",
    "4722": "Agences de voyage",
    "5541": "Stations-service",

    # Sant√© & M√©dical üè•
    "8011": "M√©decins",
    "8021": "Dentistes",
    "8062": "H√¥pitaux",
    "8099": "Services m√©dicaux divers",

    # Achats & E-commerce üõí
    "5311": "Grands magasins",
    "5691": "Magasins de v√™tements",
    "5732": "Magasins d'√©lectronique",
    "5942": "Librairies",

    # Services financiers üí∞
    "6011": "Distributeurs automatiques de billets (ATM)",
    "6051": "Cryptomonnaies",
    "6211": "Courtiers en bourse",
    "6300": "Assurances"
}

job_statuses_list = [
    "Salari√©",
    "Stagiaire",
    "Int√©rimaire",
    "Fonctionnaire",
    "Auto-entrepreneur",
    "Entrepreneur/Chef d'entreprise",
    "Profession lib√©rale",
    "Consultant",
    "Freelance/Travailleur autonome",
    "Apprenti",
    "Contractuel",
    "Saisonnier",
    "Vacataire",
    "VSI (Volontaire de Solidarit√© Internationale)"
]


# 

# Job status to income tier mapping (Morocco-specific)
job_income_tiers = {
    # Low Income (MAD 0‚Äì3,000/month)
    "Stagiaire": "Low",
    "Saisonnier": "Low",
    "Apprenti": "Low",
    "Vacataire": "Low",
    "VSI (Volontaire de Solidarit√© Internationale)": "Low",
    
    # Medium Income (MAD 3,000‚Äì8,000/month)
    "Salari√©": "Medium",
    "Fonctionnaire": "Medium",
    "Int√©rimaire": "Medium",
    "Contractuel": "Medium",
    "Auto-entrepreneur": "Medium",
    "Consultant": "Medium",
    "Freelance/Travailleur autonome": "Medium",
    
    # High Income (MAD 8,000+/month)
    "Entrepreneur/Chef d'entreprise": "High",
    "Profession lib√©rale": "High",
}

# MCCs with Morocco-adjusted intervals (MAD)
mcc_intervals = {
    # Alimentation & Restaurants üçî
    "5411": {"Category": "√âpiceries/supermarch√©s", "Low": (50, 500), "Medium": (100, 1000), "High": (200, 2000)},
    "5812": {"Category": "Restaurants", "Low": (30, 300), "Medium": (50, 500), "High": (200, 1500)},
    "5813": {"Category": "Bars et discoth√®ques", "Low": (50, 400), "Medium": (100, 800), "High": (300, 2500)},
    "5814": {"Category": "Fast-food", "Low": (20, 150), "Medium": (30, 300), "High": (50, 500)},
    
    # Transport & Voyages ‚úàÔ∏è
    "4111": {"Category": "Transport en commun", "Low": (10, 100), "Medium": (20, 200), "High": (50, 500)},
    "4511": {"Category": "Compagnies a√©riennes", "Low": (0, 1000), "Medium": (1000, 5000), "High": (3000, 20000)},
    "4722": {"Category": "Agences de voyage", "Low": (100, 2000), "Medium": (500, 5000), "High": (2000, 15000)},
    "5541": {"Category": "Stations-service", "Low": (50, 300), "Medium": (100, 600), "High": (200, 1200)},
    
    # Sant√© & M√©dical üè•
    "8011": {"Category": "M√©decins", "Low": (100, 500), "Medium": (200, 1000), "High": (500, 3000)},
    "8062": {"Category": "H√¥pitaux", "Low": (500, 3000), "Medium": (1000, 10000), "High": (5000, 50000)},
    
    # Achats & E-commerce üõí
    "5732": {"Category": "√âlectronique", "Low": (500, 2000), "Medium": (1000, 10000), "High": (5000, 50000)},
    "5942": {"Category": "Librairies", "Low": (50, 300), "Medium": (100, 500), "High": (200, 1500)},
    
    # Services financiers üí∞
    "6011": {"Category": "ATM", "Low": (200, 1000), "Medium": (500, 3000), "High": (1000, 10000)},
    "6300": {"Category": "Assurances", "Low": (100, 500), "Medium": (300, 1500), "High": (1000, 5000)},
}
